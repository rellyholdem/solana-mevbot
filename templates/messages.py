from datetime import datetime
from typing import Dict, Optional


def build_library_message(links: Dict[str, str], include_updated_at: bool = False) -> str:
    lines = ["üìö <b>–ë–ò–ë–õ–ò–û–¢–ï–ö–ê –õ–ï–ö–¶–ò–ô –≠–û–°–û-01-25</b>", ""]
    for name, url in links.items():
        lines.append(f"üîó <a href=\"{url}\">{name}</a>")
    if include_updated_at:
        lines.append("")
        lines.append(f"üìÖ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {datetime.now().strftime('%d.%m.%Y %H:%M')}")
    return "\n".join(lines)


def build_upload_intro(discipline: Optional[str] = None) -> str:
    if discipline:
        head = f"üì§ <b>–ó–ê–ì–†–£–ó–ö–ê –§–ê–ô–õ–û–í</b>\n<b>–î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞:</b> {discipline}"
    else:
        head = "üìÅ <b>–ó–ê–ì–†–£–ó–ö–ê –ú–ê–¢–ï–†–ò–ê–õ–û–í</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤:"
    body = (
        "\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏:\n"
        "üìé –î–æ–∫—É–º–µ–Ω—Ç—ã (PDF, DOC, DOCX, TXT, MD)\n"
        "üéµ –ê—É–¥–∏–æ–∑–∞–ø–∏—Å–∏ (MP3, M4A, WAV, OGG)\n"
        "üì∑ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (JPG, PNG, GIF)\n"
        "üìù –¢–µ–∫—Å—Ç–æ–≤—ã–µ –∑–∞–º–µ—Ç–∫–∏ (–æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞–∫ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)\n\n"
        "üí° <b>–ó–∞–º–µ—Ç–∫–∏:</b> –ï—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ –æ–±—ã—á–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ–Ω–æ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∫–∞–∫ –∑–∞–º–µ—Ç–∫–∞ –≤ —Ñ–∞–π–ª–µ .md"
    )
    return f"{head}\n\n{body}"


def build_scan_intro() -> str:
    return (
        "üìë <b>–°–ö–ê–ù –ö–û–ù–°–ü–ï–ö–¢–ê</b>\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ 1 –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∫–æ–Ω—Å–ø–µ–∫—Ç–∞. –ü–æ –∫–Ω–æ–ø–∫–µ \"‚úÖ –ì–æ—Ç–æ–≤–æ\" –º—ã —Å–æ–±–µ—Ä—ë–º PDF —Å–æ —Å–Ω–∏–º–∫–æ–≤ –∏ –≤–µ—Ä–Ω—ë–º—Å—è –≤ –∑–∞–≥—Ä—É–∑–∫—É –∑–∞–Ω—è—Ç–∏—è."
    )
